{"version":3,"sources":["main.js","views/_auth/authService.js","views/_auth/login.ctrl.js","views/_auth/register.ctrl.js","views/_directives/directives.js","views/_feeds/feeds.ctrl.js","views/_filters/filters.js","views/_home/home.ctrl.js","views/_navigation/navigation.controller.js","views/_navigation/navigation.directive.js","views/_profile/profile.ctrl.js","views/_prompts/dialog.ctrl.js","views/_crop/crop.ctrl.js"],"names":["config","$routeProvider","$locationProvider","NotificationProvider","setOptions","delay","startTop","startRight","verticalSpacing","horizontalSpacing","positionX","positionY","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","$timeout","authService","$on","event","nextRoute","currentRoute","console","log","path","isLoggedIn","angular","module","$","validator","setDefaults","highlight","element","closest","removeClass","addClass","unhighlight","errorClass","errorPlacement","error","parent","length","insertAfter","find","$http","$window","$localStorage","register","user","post","login","saveToken","token","fitforlife_token","getToken","payload","split","atob","JSON","parse","_exp","Date","now","currentUser","_email","_name","_last_ip","logout","service","$inject","loginCtrl","$scope","notify","vm","this","_password","validate","rules","email","required","maxlength","password","minlength","loading","valid","then","response","success","message","data","title","statusText","catch","err","finally","registerCtrl","$uibModal","modalInstance","open","animation","backdrop","keyboard","size","resolve","info","_title","_message","_confirm_label","result","_confirm_password","_latitude","_longtitude","name","confirm_password","equalTo","navigator","geolocation","getCurrentPosition","position","coords","latitude","_longitude","longitude","alert","directive","$parse","restrict","link","scope","attrs","model","fileModel","modelSetter","assign","bind","$apply","files","feedsCtrl","filter","input","charAt","toUpperCase","substr","toLowerCase","parsedDate","isNaN","_date","toLocaleString","items","props","out","isArray","keys","Object","forEach","item","itemMatches","i","prop","text","toString","indexOf","push","homeCtrl","navigationCtrl","checkLogin","navigation","profileCtrl","_bio","selectPic","click","$watch","profilePic","image","_file","attr","val","dialogCtrl","$uibModalInstance","close","cropCtrl","rendered","type","match","imageData","reader","FileReader","Image","canvas","document","getElementById","ctx","getContext","cropper","onload","width","height","drawImage","e","src","target","readAsDataURL","selection","setSize","img","toDataURL"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module('fitforlife', ['ngRoute', 'ngAnimate', 'ngSanitize', 'ngTouch', 'ui.bootstrap', 'ngMessages', 'angular-ladda', 'ui-notification', 'ngStorage']);\n\nfunction config($routeProvider, $locationProvider, NotificationProvider) {\n  NotificationProvider.setOptions({\n    delay: 2000,\n    startTop: 20,\n    startRight: 10,\n    verticalSpacing: 20,\n    horizontalSpacing: 20,\n    positionX: 'right',\n    positionY: 'bottom'\n  });\n\n  $routeProvider\n    .when('/register', {\n      templateUrl: 'views/_auth/register.view.html',\n      controller: 'registerCtrl',\n      controllerAs: 'vm'\n    }).when('/login', {\n      templateUrl: 'views/_auth/login.view.html',\n      controller: 'loginCtrl',\n      controllerAs: 'vm'\n    }).when('/home', {\n      templateUrl: 'views/_home/home.view.html',\n      controller: 'homeCtrl',\n      controllerAs: 'vm'\n    }).when('/feeds', {\n      templateUrl: 'views/_feeds/feeds.view.html',\n      controller: 'feedsCtrl',\n      controllerAs: 'vm'\n    }).when('/profile', {\n      templateUrl: 'views/_profile/profile.view.html',\n      controller: 'profileCtrl',\n      controllerAs: 'vm'\n    })\n    .otherwise({\n      redirectTo: '/home'\n    });\n\n  // use the HTML5 history API\n  $locationProvider.html5Mode(true);\n}\n\nfunction run($rootScope, $location, $timeout, authService) {\n  $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n    console.log(\"redirect to: \" + $location.path());\n    if (authService.isLoggedIn()) { // check if user is logged in\n      // user is logged in\n    } else {\n      if (($location.path() != '/login' && $location.path() != '/register' && $location.path() != '/home')) {\n        $location.path('/home');\n      }\n    }\n  });\n}\n\nangular.module('fitforlife').config(['$routeProvider', '$locationProvider', 'NotificationProvider', config])\n  .run(['$rootScope', '$location', '$timeout', 'authService', run]);\n\n\n\n\n$.validator.setDefaults({\n  highlight: function(element) {\n    $(element).closest('.form-group').removeClass('has-success').addClass('has-error')\n      // $(element).parent().find('.form-control-feedback').removeClass('fa-check').addClass('fa-remove');\n  },\n  unhighlight: function(element) {\n    $(element).closest('.form-group').removeClass('has-error').addClass('has-success');\n    // $(element).parent().find('.form-control-feedback').removeClass('fa-remove').addClass('fa-check');\n  },\n  errorClass: 'error',\n  errorPlacement: function(error, element) {\n    if (element.parent('.input-group').length) {\n      error.insertAfter(element.parent());\n    } else {\n      error.insertAfter($(element).parent().find('.form-control-feedback'));\n    }\n  }\n});\n","(function() {\n\n    angular\n        .module('fitforlife')\n        .service('authService', authService);\n\n    authService.$inject = ['$http', '$window', '$localStorage'];\n\n    function authService($http, $window, $localStorage) {\n\n        var register = function(user) {\n            return $http.post('/api/register', user);\n        }\n\n        var login = function(user) {\n            return $http.post('/api/login', user);\n        }\n\n        var saveToken = function(token) {\n            $localStorage.fitforlife_token = token;\n        };\n\n        var getToken = function() {\n            return $localStorage.fitforlife_token;\n        };\n\n        var isLoggedIn = function() {\n            var token = getToken();\n            var payload;\n            if (token) {\n                payload = token.split('.')[1];\n                payload = $window.atob(payload);\n                payload = JSON.parse(payload);\n                return payload._exp > Date.now() / 1000;\n            } else {\n                return false;\n            }\n        };\n\n        var currentUser = function() {\n            if (isLoggedIn()) {\n                var token = getToken();\n                var payload = token.split('.')[1];\n                payload = $window.atob(payload);\n                payload = JSON.parse(payload);\n                return {\n                    _email: payload._email,\n                    _name: payload._name,\n                    _last_ip :  payload._last_ip\n                };\n            }\n        };\n\n        logout = function() {\n            $localStorage.fitforlife_token = null;\n        };\n\n\n        return {\n            register: register,\n            login: login,\n            saveToken: saveToken,\n            getToken: getToken,\n            isLoggedIn: isLoggedIn,\n            currentUser: currentUser,\n            logout: logout\n        };\n    }\n})();","(function() {\n  angular\n    .module('fitforlife')\n    .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$scope', '$location', '$localStorage', '$timeout', 'authService', 'Notification'];\n\n  function loginCtrl($scope, $location, $localStorage, $timeout, authService, notify) {\n    var vm = this;\n    vm.user = {\n      _email: '',\n      _password: '',\n    }\n\n\n    $('#login').validate({\n      rules: {\n        email: {\n          required: true,\n          email: true,\n          maxlength: 100\n        },\n        password: {\n          required: true,\n          minlength: 8,\n          maxlength: 25\n        }\n      }\n    });\n\n\n    vm.loading = false;\n    vm.login = function() {\n      if (!$('#login').valid()) return;\n      vm.loading = true;\n      authService.login(vm.user)\n        .then(function(response) {\n          notify.success({\n            message: response.data.message,\n            title: response.statusText\n          });\n          authService.saveToken(response.data.token);\n          $timeout(function() {\n            $location.path('feed');\n          }, 500);\n        }).catch(function(err) {\n          notify.error({\n            message: err.data.message,\n            title: err.statusText\n          });\n        }).finally(function() {\n          vm.loading = false;\n        });\n    }\n  }\n})();\n","(function() {\n    angular\n        .module('fitforlife')\n        .controller('registerCtrl', registerCtrl);\n\n    registerCtrl.$inject = ['$scope', '$location', '$uibModal', 'authService', 'Notification'];\n\n    function registerCtrl($scope, $location, $uibModal, authService, notify) {\n        var vm = this;\n        vm.user = {\n            _name: '',\n            _email: '',\n            _password: '',\n            _confirm_password: '',\n            _latitude: '',\n            _longtitude: ''\n        }\n\n\n        $('#registration').validate({\n            rules: {\n                email: {\n                    required: true,\n                    email: true,\n                    maxlength: 100\n                },\n                name: {\n                    required: true,\n                    minlength: 2,\n                    maxlength: 40\n                },\n\n                password: {\n                    required: true,\n                    minlength: 8,\n                    maxlength: 25\n                },\n                confirm_password: {\n                    required: true,\n                    minlength: 8,\n                    maxlength: 25,\n                    equalTo: \"#password\"\n                }\n            }\n        });\n\n\n        function register(user) {\n            vm.loading = true;\n            authService.register(user)\n                .then(function(response) {\n                    console.log(response);\n                    notify.success({\n                        message: response.data.message,\n                        title: response.statusText\n                    });\n\n                    var modalInstance = $uibModal.open({\n                        animation: true,\n                        backdrop: 'static',\n                        keyboard: false,\n                        templateUrl: '/views/_prompts/dialog.view.html',\n                        controller: 'dialogCtrl as vmd',\n                        size: 'sm',\n                        resolve: {\n                            info: function() {\n                                return {\n                                    _title: 'Awesome...',\n                                    _message: 'You registered successfully. Please login to get access.',\n                                    _confirm_label: \"Let's Start!\"\n                                };\n                            }\n                        }\n                    });\n                    modalInstance.result.then(function(data) {\n                        $location.path('login');\n                    }, function() {\n\n                    });\n                }).catch(function(err) {\n                    console.log(err);\n                    notify.error({\n                        message: err.data.message,\n                        title: err.statusText\n                    });\n                }).finally(function() {\n                    vm.loading = false;\n                });\n        }\n\n        vm.loading = false;\n        vm.register = function() {\n            if (!$('#registration').valid()) return;\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function(position) {\n                    vm.user._latitude = position.coords.latitude;\n                    vm.user._longitude = position.coords.longitude;\n                    register(vm.user);\n                }, function(err) {\n                    console.log(err);\n                });\n            } else {\n                alert('It seems like Geolocation, which is required for this page, is not enabled in your browser. Please use a browser which supports it.');\n            }\n        }\n    }\n})();","/* adding the event handler for file change*/\nangular.module('fitforlife').directive('fileModel', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var model = $parse(attrs.fileModel);\n      var modelSetter = model.assign;\n      element.bind('change', function() {\n        scope.$apply(function() {\n          modelSetter(scope, element[0].files[0]);\n        });\n      });\n    }\n  };\n}]);\n","(function() {\n  angular\n    .module('fitforlife')\n    .controller('feedsCtrl', feedsCtrl);\n\n  function feedsCtrl() {\n\n  }\n})();\n","angular\n  .module('fitforlife')\n  .filter('capitalize', function() {\n    return function(input) {\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\n    }\n  })\n  .filter('datetime', function() {\n    return function(input) {\n      if (!input) {\n        return \"\";\n      }\n      var parsedDate = Date.parse(input);\n      if (isNaN(input) && !isNaN(parsedDate)) {\n        var _date = new Date(input);\n        return _date.toLocaleString();\n      } else {\n        return input;\n      }\n    };\n  }).filter('propsFilter', function() {\n    return function(items, props) {\n      var out = [];\n\n      if (angular.isArray(items)) {\n        var keys = Object.keys(props);\n\n        items.forEach(function(item) {\n          var itemMatches = false;\n\n          for (var i = 0; i < keys.length; i++) {\n            var prop = keys[i];\n            var text = props[prop].toLowerCase();\n            if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {\n              itemMatches = true;\n              break;\n            }\n          }\n\n          if (itemMatches) {\n            out.push(item);\n          }\n        });\n      } else {\n        out = items;\n      }\n      return out;\n    };\n  });\n","(function() {\n  angular\n    .module('fitforlife')\n    .controller('homeCtrl', homeCtrl);\n\n  function homeCtrl() {\n\n  }\n})();\n","(function() {\n\n  angular\n    .module('fitforlife')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location', 'authService'];\n\n  function navigationCtrl($location, authService) {\n    var vm = this;\n\n    vm.checkLogin = function() {\n      return authService.isLoggedIn()\n    };\n    vm.logout = function() {\n      authService.logout();\n      $location.path('login');\n    }\n    vm.currentUser = authService.currentUser();\n  }\n\n})();\n","(function() {\n  angular\n    .module('fitforlife')\n    .directive('navigation', navigation);\n\n  function navigation() {\n    return {\n      restrict: 'EA',\n      templateUrl: '/views/_navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n})();\n","(function() {\n  angular\n    .module('fitforlife')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$scope', '$location', '$uibModal', 'authService', 'Notification'];\n\n  function profileCtrl($scope, $location, $uibModal, authService, notify) {\n    var vm = this;\n    vm.user = {\n      _bio: ''\n    }\n    vm.selectPic = function() {\n      $('#profilePic').click();\n    }\n    $scope.$watch('vm.profilePic', function() {\n      if (vm.profilePic) {\n        var modalInstance = $uibModal.open({\n          animation: true,\n          backdrop: 'static',\n          keyboard: false,\n          templateUrl: '/views/_crop/crop.view.html',\n          controller: 'cropCtrl as vmd',\n          resolve: {\n            image: function() {\n              return {\n                _file: vm.profilePic\n              };\n            }\n          }\n        });\n        modalInstance.result.then(function(data) {\n          if (data) {\n            $(\"#userPic\").attr(\"src\", data);\n          }\n          $('#profilePic').val('');\n        }, function() {\n\n        });\n      }\n    });\n  }\n})();\n","(function() {\n  angular\n    .module('fitforlife')\n    .controller('dialogCtrl', dialogCtrl);\n\n  dialogCtrl.$inject = ['$uibModal', '$uibModalInstance', 'info'];\n\n  function dialogCtrl($uibModal, $uibModalInstance, info) {\n    console.log(info);\n    var vm = this;\n    vm.info = info ? info : {};\n    vm.close = function(data) {\n      $uibModalInstance.close(data);\n    };\n  }\n})();\n","(function() {\n  angular\n    .module('fitforlife')\n    .controller('cropCtrl', cropCtrl);\n\n  cropCtrl.$inject = ['$scope', '$uibModal', '$uibModalInstance', 'image'];\n\n  function cropCtrl($scope, $uibModal, $uibModalInstance, image) {\n    var vm = this;\n    vm.image = image;\n    $uibModalInstance.rendered.then(function() {\n      if (!vm.image || !vm.image._file || !vm.image._file.type.match('image.*')) {\n        console.log(\"not a valid image.\");\n        return;\n      }\n      vm.imageData = '';\n      var reader = new FileReader();\n      var image = new Image() //document.getElementById(\"imageContent\");\n      vm.canvas = document.getElementById(\"imageCanvas\");\n      vm.ctx = vm.canvas.getContext(\"2d\");\n      vm.cropper;\n      image.onload = function() {\n        vm.canvas.width = 300;\n        vm.canvas.height = (300 / image.width) * image.height;\n        vm.ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, vm.canvas.width, vm.canvas.height);\n        vm.cropper = $('#imageCanvas').cropper();\n      };\n      reader.onload = function(e) {\n        image.src = e.target.result;\n      };\n      reader.readAsDataURL(vm.image._file);\n    });\n    vm.selection = null;\n    vm.setSize = function(img, selection) {\n      vm.selection = selection;\n    }\n    vm.close = function(data) {\n      var canvas = $('#imageCanvas').cropper('getCroppedCanvas');\n      var image = canvas.toDataURL();\n      $uibModalInstance.close(image);\n      $('#imageCanvas').cropper('destroy');\n    };\n  }\n\n})();\n"],"sourceRoot":"/source/"}